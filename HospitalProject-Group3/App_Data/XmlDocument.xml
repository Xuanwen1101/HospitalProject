<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HospitalProject-Group3</name>
    </assembly>
    <members>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:HospitalProject_Group3.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:HospitalProject_Group3.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:HospitalProject_Group3.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:HospitalProject_Group3.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:HospitalProject_Group3.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:HospitalProject_Group3.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:HospitalProject_Group3.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:HospitalProject_Group3.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:HospitalProject_Group3.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HospitalProject_Group3.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:HospitalProject_Group3.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:HospitalProject_Group3.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:HospitalProject_Group3.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:HospitalProject_Group3.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:HospitalProject_Group3.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,HospitalProject_Group3.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,HospitalProject_Group3.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:HospitalProject_Group3.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},HospitalProject_Group3.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey.#ctor(HospitalProject_Group3.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,HospitalProject_Group3.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:HospitalProject_Group3.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:HospitalProject_Group3.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HospitalProject_Group3.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:HospitalProject_Group3.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:HospitalProject_Group3.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:HospitalProject_Group3.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:HospitalProject_Group3.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:HospitalProject_Group3.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:HospitalProject_Group3.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HospitalProject_Group3.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.AppointmentDataController.ListAppointments">
            <summary>
             Displays booked appointments
            </summary>
            <returns></returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.AppointmentDataController.FindAppointment(System.Int32)">
            <summary>
            Gets a particular appointment based on id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.AppointmentDataController.UpdateAppointment(System.Int32,HospitalProject_Group3.Models.Appointment)">
            <summary>
            updates a specific appointment info
            </summary>
            <param name="id"></param>
            <param name="appointment"></param>
            <returns></returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.AppointmentDataController.AddAppointment(HospitalProject_Group3.Models.Appointment)">
            <summary>
            creates new appointment booking
            </summary>
            <param name="appointment"></param>
            <returns></returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.AppointmentDataController.DeleteAppointment(System.Int32)">
            <summary>
            deletes aspecific appointment
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.BillDataController.ListBills">
            <summary>
            list bills
            </summary>
            <returns>returns the bills</returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.BillDataController.FindBill(System.Int32)">
            <summary>
            find a particular bill using id
            </summary>
            <param name="id"></param>
            <returns>returns a specific bill based on id</returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.BillDataController.UpdateBill(System.Int32,HospitalProject_Group3.Models.Bill)">
            <summary>
            changes bill records
            </summary>
            <param name="id"></param>
            <param name="bill"></param>
            <returns>updated bill</returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.BillDataController.AddBill(HospitalProject_Group3.Models.Bill)">
            <summary>
            creates new bill
            </summary>
            <param name="bill"></param>
            <returns></returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.BillDataController.DeleteBill(System.Int32)">
            <summary>
            Deletes a specific bill based on id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.InsuranceController.GetApplicationCookie">
            <summary>
            Grabs the authentication cookie sent to this controller.
            For proper WebAPI authentication, you can send a post request with login credentials to the WebAPI and log the access token from the response. The controller already knows this token, so we're just passing it up the chain.
            
            Here is a descriptive article which walks through the process of setting up authorization/authentication directly.
            https://docs.microsoft.com/en-us/aspnet/web-api/overview/security/individual-accounts-in-web-api
            </summary>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.InsuranceController.List">
            GET: Insurance/List
        </member>
        <member name="M:HospitalProject_Group3.Controllers.InsuranceDataController.ListInsurances">
            <summary>
            Returns all Insurance in the system.
            </summary>
            <returns>
            HEADER: 200 (OK)
            CONTENT: all Insurance in the database.
            </returns>
            <example>
            GET: api/InsuranceData/ListInsurances
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.InsuranceDataController.FindInsurance(System.Int32)">
            <summary>
            Returns the Insurance.
            </summary>
            <returns>
            HEADER: 200 (OK)
            CONTENT: An Insurance in the system matching up to the Insurance ID primary key
            or
            HEADER: 404 (NOT FOUND)
            </returns>
            <param name="id">The primary key of the Insurance</param>
            <example>
            GET: api/InsuranceData/FindInsurance/5
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.InsuranceDataController.AddInsurance(HospitalProject_Group3.Models.Insurance)">
            <summary>
            Adds a Insurance to the system
            </summary>
            <param name="Insurance">JSON FORM DATA of a Insurance</param>
            <returns>
            HEADER: 201 (Created)
            CONTENT: Insurance Company, Insurance Data
            or
            HEADER: 400 (Bad Request)
            </returns>
            <example>
            POST: api/InsuranceData/AddInsurance
            FORM DATA: Insurance JSON Object
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.InsuranceDataController.UpdateInsurance(System.Int32,HospitalProject_Group3.Models.Insurance)">
            <summary>
            Updates the selected Insurances in the system with POST Data input
            </summary>
            <param name="id">Represents the Insurances ID primary key</param>
            <param name="Insurances">JSON FORM DATA of an Insurances</param>
            <returns>
            HEADER: 204 (Success, No Content Response)
            or
            HEADER: 400 (Bad Request)
            or
            HEADER: 404 (Not Found)
            </returns>
            <example>
            PUT: api/InsurancesData/UpdateInsurances/5
            FORM DATA: Insurances JSON Object
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.InsuranceDataController.DeleteInsurance(System.Int32)">
            <summary>
            Deletes an Insurance from the system by it's ID.
            </summary>
            <param name="id">The primary key of the Insurance</param>
            <returns>
            HEADER: 200 (OK)
            or
            HEADER: 404 (NOT FOUND)
            </returns>
            <example>
            DELETE: api/InsuranceData/DeleteInsurance/5
            FORM DATA: (empty)
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.MedicationController.GetApplicationCookie">
            <summary>
            Grabs the authentication cookie sent to this controller.
            For proper WebAPI authentication, you can send a post request with login credentials to the WebAPI and log the access token from the response. The controller already knows this token, so we're just passing it up the chain.
            
            Here is a descriptive article which walks through the process of setting up authorization/authentication directly.
            https://docs.microsoft.com/en-us/aspnet/web-api/overview/security/individual-accounts-in-web-api
            </summary>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.MedicationController.List">
            GET: Medication/List
        </member>
        <member name="M:HospitalProject_Group3.Controllers.MedicationDataController.ListMedications">
            <summary>
            Returns all Medication in the system.
            </summary>
            <returns>
            HEADER: 200 (OK)
            CONTENT: all Medication in the database.
            </returns>
            <example>
            GET: api/MedicationData/ListMedications
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.MedicationDataController.FindMedication(System.Int32)">
            <summary>
            Returns the Medication info for the given Role id.
            </summary>
            <returns>
            HEADER: 200 (OK)
            CONTENT: An Medication in the system matching up to the Medication ID primary key
            or
            HEADER: 404 (NOT FOUND)
            </returns>
            <param name="id">The primary key of the Medication</param>
            <example>
            GET: api/MedicationData/FindMedication/5
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.MedicationDataController.AddMedication(HospitalProject_Group3.Models.Medication)">
            <summary>
            Adds a Medication to the system
            </summary>
            <param name="Medication">JSON FORM DATA of a Medication</param>
            <returns>
            HEADER: 201 (Created)
            CONTENT: Medication ID, Medication Data
            or
            HEADER: 400 (Bad Request)
            </returns>
            <example>
            POST: api/MedicationData/AddMedication
            FORM DATA: Medication JSON Object
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.MedicationDataController.UpdateMedication(System.Int32,HospitalProject_Group3.Models.Medication)">
            <summary>
            Updates the selected Medication in the system with POST Data input
            </summary>
            <param name="id">Represents the Medication ID primary key</param>
            <param name="Medication">JSON FORM DATA of an Medication</param>
            <returns>
            HEADER: 204 (Success, No Content Response)
            or
            HEADER: 400 (Bad Request)
            or
            HEADER: 404 (Not Found)
            </returns>
            <example>
            PUT: api/MedicationData/UpdateMedication/5
            FORM DATA: Medication JSON Object
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.MedicationDataController.DeleteMedication(System.Int32)">
            <summary>
            Deletes an Medication from the system by it's ID.
            </summary>
            <param name="id">The primary key of the Medication</param>
            <returns>
            HEADER: 200 (OK)
            or
            HEADER: 404 (NOT FOUND)
            </returns>
            <example>
            DELETE: api/MedicationData/DeleteMedication/5
            FORM DATA: (empty)
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.PatientController.List">
            <summary>
            This is to list patients in the database
            </summary>
            <returns>all</returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.PatientController.Details(System.Int32)">
            <summary>
            gets patient by it's id
            </summary>
            <param name="id"></param>
            <returns>patient with id number</returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.PatientController.New">
            <summary>
            creating new patient
            </summary>
            <returns></returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.PatientController.Create(HospitalProject_Group3.Models.Patient)">
            <summary>
            creating a new patient
            </summary>
            <param name="patient"></param>
            <returns>sends new patient info to database</returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.PatientController.Edit(System.Int32)">
            <summary>
            makes changes to patient info based on provided id
            </summary>
            <param name="id"></param>
            <returns>changed patient info</returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.PatientController.Update(System.Int32,HospitalProject_Group3.Models.Patient)">
            <summary>
            changes old patient record to new patient info
            </summary>
            <param name="id"></param>
            <param name="patient"></param>
            <returns></returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.PatientController.DeleteConfirm(System.Int32)">
            <summary>
            confirm if one ones to delete patient with id number from database
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.PatientController.Delete(System.Int32)">
            <summary>
            deleting patient with id from database
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.PatientDataController.ListPatients">
            <summary>
            list patient
            </summary>
            <returns>returns all patients details in the system</returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.PatientDataController.FindPatient(System.Int32)">
            <summary>
            searches for patient with patient id
            </summary>
            <param name="id"></param>
            <returns>requested patient info</returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.PatientDataController.UpdatePatient(System.Int32,HospitalProject_Group3.Models.Patient)">
            <summary>
            changes to the patient info
            </summary>
            <param name="id"></param>
            <param name="patient"></param>
            <returns></returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.PatientDataController.AddPatient(HospitalProject_Group3.Models.Patient)">
            <summary>
            add new patient details
            </summary>
            <param name="patient"></param>
            <returns></returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.PatientDataController.DeletePatient(System.Int32)">
            <summary>
            deletes patient detail from database
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.RoleController.GetApplicationCookie">
            <summary>
            Grabs the authentication cookie sent to this controller.
            For proper WebAPI authentication, you can send a post request with login credentials to the WebAPI and log the access token from the response. The controller already knows this token, so we're just passing it up the chain.
            
            Here is a descriptive article which walks through the process of setting up authorization/authentication directly.
            https://docs.microsoft.com/en-us/aspnet/web-api/overview/security/individual-accounts-in-web-api
            </summary>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.RoleController.List">
            GET: Role/List
        </member>
        <member name="M:HospitalProject_Group3.Controllers.RoleDataController.ListRoles">
            <summary>
            Returns all Roles in the system.
            </summary>
            <returns>
            HEADER: 200 (OK)
            CONTENT: all Roles in the database.
            </returns>
            <example>
            GET: api/RoleData/ListRoles
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.RoleDataController.ListRolesForDepartment(System.Int32)">
            <summary>
            Gathers information about all Roles related to the selected Department ID
            </summary>
            <returns>
            HEADER: 200 (OK)
            CONTENT: all Roles in the database matched with the selected Department ID
            </returns>
            <param name="id">Department ID.</param>
            <example>
            GET: api/RoleData/ListRolesForDepartment/3
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.RoleDataController.FindRole(System.Int32)">
            <summary>
            Returns the Role info for the given Role id.
            </summary>
            <returns>
            HEADER: 200 (OK)
            CONTENT: An Role in the system matching up to the Role ID primary key
            or
            HEADER: 404 (NOT FOUND)
            </returns>
            <param name="id">The primary key of the Role</param>
            <example>
            GET: api/RoleData/FindRole/5
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.RoleDataController.UpdateRole(System.Int32,HospitalProject_Group3.Models.Role)">
            <summary>
            Updates a particular Role in the system with POST Data input
            </summary>
            <param name="id">Represents the Role ID primary key</param>
            <param name="Role">JSON FORM DATA of an Role</param>
            <returns>
            HEADER: 204 (Success, No Content Response)
            or
            HEADER: 400 (Bad Request)
            or
            HEADER: 404 (Not Found)
            </returns>
            <example>
            PUT: api/RoleData/UpdateRole/5
            FORM DATA: Role JSON Object
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.RoleDataController.AddRole(HospitalProject_Group3.Models.Role)">
            <summary>
            Adds an Role to the system
            </summary>
            <param name="Role">JSON FORM DATA of an Role</param>
            <returns>
            HEADER: 201 (Created)
            CONTENT: Role ID, Role Data
            or
            HEADER: 400 (Bad Request)
            </returns>
            <example>
            POST: api/RoleData/AddRole
            FORM DATA: Role JSON Object
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.RoleDataController.DeleteRole(System.Int32)">
            <summary>
            Deletes an Role from the system by it's ID.
            </summary>
            <param name="id">The primary key of the Role</param>
            <returns>
            HEADER: 200 (OK)
            or
            HEADER: 404 (NOT FOUND)
            </returns>
            <example>
            DELETE: api/RoleData/DeleteRole/5
            FORM DATA: (empty)
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.ShiftController.GetApplicationCookie">
            <summary>
            Grabs the authentication cookie sent to this controller.
            For proper WebAPI authentication, you can send a post request with login credentials to the WebAPI and log the access token from the response. The controller already knows this token, so we're just passing it up the chain.
            
            Here is a descriptive article which walks through the process of setting up authorization/authentication directly.
            https://docs.microsoft.com/en-us/aspnet/web-api/overview/security/individual-accounts-in-web-api
            </summary>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.ShiftController.List">
            GET: Shift/List
        </member>
        <member name="M:HospitalProject_Group3.Controllers.ShiftDataController.ListShifts">
            <summary>
            Returns all Shifts in the system.
            </summary>
            <returns>
            HEADER: 200 (OK)
            CONTENT: all Shifts in the database.
            </returns>
            <example>
            GET: api/ShiftData/ListShifts
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.ShiftDataController.ListShiftsWorkingForStaff(System.Int32)">
            <summary>
            Returns all Shifts in the system associated with the selected Staff.
            </summary>
            <returns>
            HEADER: 200 (OK)
            CONTENT: all Shifts in the database showing the selected Staff.
            </returns>
            <param name="id">Staff Primary Key</param>
            <example>
            GET: api/ShiftData/ListShiftsWorkingForStaff/1
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.ShiftDataController.ListShiftsNotWorkingForStaff(System.Int32)">
            <summary>
            Returns Shifts in the system not working for the selected Staff.
            </summary>
            <returns>
            HEADER: 200 (OK)
            CONTENT: all Shifts in the database not working the selected Staff.
            </returns>
            <param name="id">Staff Primary Key</param>
            <example>
            GET: api/ShiftData/ListShiftsNotWorkingForStaff/1
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.ShiftDataController.FindShift(System.Int32)">
            <summary>
            Returns the Shift info for the given Shift id.
            </summary>
            <returns>
            HEADER: 200 (OK)
            CONTENT: An Shift in the system matching up to the Shift ID primary key
            or
            HEADER: 404 (NOT FOUND)
            </returns>
            <param name="id">The primary key of the Shift</param>
            <example>
            GET: api/ShiftData/FindShift/5
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.ShiftDataController.UpdateShift(System.Int32,HospitalProject_Group3.Models.Shift)">
            <summary>
            Updates a particular Shift in the system with POST Data input
            </summary>
            <param name="id">Represents the Shift ID primary key</param>
            <param name="Shift">JSON FORM DATA of an Shift</param>
            <returns>
            HEADER: 204 (Success, No Content Response)
            or
            HEADER: 400 (Bad Request)
            or
            HEADER: 404 (Not Found)
            </returns>
            <example>
            PUT: api/ShiftData/UpdateShift/5
            FORM DATA: Shift JSON Object
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.ShiftDataController.AddShift(HospitalProject_Group3.Models.Shift)">
            <summary>
            Adds an Shift to the system
            </summary>
            <param name="Shift">JSON FORM DATA of an Shift</param>
            <returns>
            HEADER: 201 (Created)
            CONTENT: Shift ID, Shift Data
            or
            HEADER: 400 (Bad Request)
            </returns>
            <example>
            POST: api/ShiftData/AddShift
            FORM DATA: Shift JSON Object
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.ShiftDataController.DeleteShift(System.Int32)">
            <summary>
            Deletes an Shift from the system by it's ID.
            </summary>
            <param name="id">The primary key of the Shift</param>
            <returns>
            HEADER: 200 (OK)
            or
            HEADER: 404 (NOT FOUND)
            </returns>
            <example>
            DELETE: api/ShiftData/DeleteShift/5
            FORM DATA: (empty)
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.StaffController.GetApplicationCookie">
            <summary>
            Grabs the authentication cookie sent to this controller.
            For proper WebAPI authentication, you can send a post request with login credentials to the WebAPI and log the access token from the response. The controller already knows this token, so we're just passing it up the chain.
            
            Here is a descriptive article which walks through the process of setting up authorization/authentication directly.
            https://docs.microsoft.com/en-us/aspnet/web-api/overview/security/individual-accounts-in-web-api
            </summary>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.StaffController.List">
            GET: Staff/List
        </member>
        <member name="M:HospitalProject_Group3.Controllers.StaffDataController.ListStaffs">
            <summary>
            Returns all Staffs in the system.
            </summary>
            <returns>
            HEADER: 200 (OK)
            CONTENT: all Staffs in the database.
            </returns>
            <example>
            GET: api/StaffData/ListStaffs
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.StaffDataController.ListStaffsForRole(System.Int32)">
            <summary>
            Gathers information about all Staffs related to the selected Role ID
            </summary>
            <returns>
            HEADER: 200 (OK)
            CONTENT: all Staffs in the database matched with the selected Role ID
            </returns>
            <param name="id">Role ID.</param>
            <example>
            GET: api/StaffData/ListStaffsForRole/3
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.StaffDataController.ListStaffsForShift(System.Int32)">
            <summary>
            Gathers information about Staffs related to the selected Shift ID
            </summary>
            <returns>
            HEADER: 200 (OK)
            CONTENT: all Staffs in the database matched to the selected Shift ID
            </returns>
            <param name="id">Shift ID.</param>
            <example>
            GET: api/StaffData/ListStaffsForShift/2
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.StaffDataController.AssociateStaffWithShift(System.Int32,System.Int32)">
            <summary>
            Associates a particular shift with a particular staff
            </summary>
            <param name="staffId">The staff ID primary key</param>
            <param name="shiftId">The shift ID primary key</param>
            <returns>
            HEADER: 200 (OK)
            or
            HEADER: 404 (NOT FOUND)
            </returns>
            <example>
            POST api/StaffData/AssociateStaffWithShift/2/1
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.StaffDataController.UnAssociateStaffWithShift(System.Int32,System.Int32)">
            <summary>
            Removes an association between a particular shift and a particular staff
            </summary>
            <param name="staffId">The staff ID primary key</param>
            <param name="shiftId">The shift ID primary key</param>
            <returns>
            HEADER: 200 (OK)
            or
            HEADER: 404 (NOT FOUND)
            </returns>
            <example>
            POST api/StaffData/AssociateStaffWithShift/2/1
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.StaffDataController.FindStaff(System.Int32)">
            <summary>
            Returns the staff info for the given staff id.
            </summary>
            <returns>
            HEADER: 200 (OK)
            CONTENT: The staff in the system matching up to the staff ID primary key
            or
            HEADER: 404 (NOT FOUND)
            </returns>
            <param name="id">The primary key of the staff</param>
            <example>
            GET: api/StaffData/FindStaff/5
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.StaffDataController.UpdateStaff(System.Int32,HospitalProject_Group3.Models.Staff)">
            <summary>
            Updates the selected staff in the system with POST Data input
            </summary>
            <param name="id">Represents the Staff ID primary key</param>
            <param name="staff">JSON FORM DATA of an staff</param>
            <returns>
            HEADER: 204 (Success, No Content Response)
            or
            HEADER: 400 (Bad Request)
            or
            HEADER: 404 (Not Found)
            </returns>
            <example>
            PUT: api/StaffData/UpdateStaff/5
            FORM DATA: Staff JSON Object
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.StaffDataController.UploadStaffPicture(System.Int32)">
            <summary>
            Receives staff picture data, uploads it to the webserver and updates the staff's HasPic option
            </summary>
            <param name="id">the staff id</param>
            <returns>status code 200 if successful.</returns>
            <example>
            curl -F StaffPicture=@file.jpg "https://localhost:44342/api/StaffData/UploadStaffPicture/5"
            POST: api/StaffData/UploadStaffPicture/5
            HEADER: enctype=multipart/form-data
            FORM-DATA: image
            </example>
            https://stackoverflow.com/questions/28369529/how-to-set-up-a-web-api-controller-for-multipart-form-data
        </member>
        <member name="M:HospitalProject_Group3.Controllers.StaffDataController.AddStaff(HospitalProject_Group3.Models.Staff)">
            <summary>
            Adds a Staff to the system
            </summary>
            <param name="staff">JSON FORM DATA of a Staff</param>
            <returns>
            HEADER: 201 (Created)
            CONTENT: Staff ID, Staff Data
            or
            HEADER: 400 (Bad Request)
            </returns>
            <example>
            POST: api/StaffData/AddStaff
            FORM DATA: Staff JSON Object
            </example>
        </member>
        <member name="M:HospitalProject_Group3.Controllers.StaffDataController.DeleteStaff(System.Int32)">
            <summary>
            Deletes the selected Staff from the system by it's ID.
            </summary>
            <param name="id">The primary key of the Staff</param>
            <returns>
            HEADER: 200 (OK)
            or
            HEADER: 404 (NOT FOUND)
            </returns>
            <example>
            DELETE: api/StaffData/DeleteStaff/5
            FORM DATA: (empty)
            </example>
        </member>
    </members>
</doc>
